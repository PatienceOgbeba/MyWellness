import React, { useState, useEffect } from 'react';
import EntryForm from './components/EntryForm';
import EntryList from './components/EntryList';
import {Amplify} from 'aws-amplify';
import './App.css';


// Imports the Authenticator and withAuthenticator components from '@aws-amplify/ui-react'.
// Authenticator is a React component that provides a ready-to-use sign-in and sign-up UI.
// withAuthenticator is a higher-order component that wraps your app component to enforce authentication.
import { Authenticator, withAuthenticator } from '@aws-amplify/ui-react';

// Imports the default styles for the Amplify UI components. This line ensures that the authenticator looks nice out of the box.
import '@aws-amplify/ui-react/styles.css';

// Imports the awsExports configuration file generated by the Amplify CLI. This file contains the AWS service configurations (like Cognito, AppSync, etc.) specific to your project.
import awsExports from './aws-exports';

// Configures the Amplify library with the settings from aws-exports.js, which includes all the AWS service configurations for this project.
Amplify.configure(awsExports);

const App = () => {
  const [entries, setEntries] = useState(() => {
    const saved = localStorage.getItem("health-entries");
    return saved ? JSON.parse(saved) : [];
  });

  useEffect(() => {
    localStorage.setItem("health-entries", JSON.stringify(entries));
  }, [entries]);

  const addEntry = (entry) => setEntries([entry, ...entries]);
  const deleteEntry = (id) => setEntries(entries.filter(e => e.id !== id));
return (
  <Authenticator>
    {({ signOut, user }) => (
      <div className="container">
        <header className="header">
          <h1>My Wellness Tracker</h1>
          <p>Welcome, {user.username}</p>
          <button className="sign-out-btn" onClick={signOut}>Sign Out</button>
        </header>

        <main>
          <EntryForm onAdd={addEntry} />
          <EntryList entries={entries} onDelete={deleteEntry} />
        </main>
      </div>
    )}
  </Authenticator>
);
}
export default withAuthenticator(App);